AWSTemplateFormatVersion: '2010-09-09'
Description: YouTube search API with Lambda, API Gateway, and Secrets Manager

Parameters:
  LambdaS3Bucket:
    Type: String
    Default: youtube-api-artifacts-joseph
    Description: The name of the S3 bucket containing the Lambda zip

  LambdaS3Key:
    Type: String
    Default: lambda.zip
    Description: The S3 object key (path to the lambda.zip)

Resources:
  YoutubeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: youtube-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionWithSecrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: arn:aws:secretsmanager:*:*:secret:youtube/*

  YoutubeSearchFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: youtubeSearchLambda
      Runtime: python3.11
      Handler: handler.lambda_handler
      Timeout: 30
      MemorySize: 256
      Role: !GetAtt YoutubeLambdaRole.Arn
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      Environment:
        Variables:
          YOUTUBE_API_SECRET_NAME: youtube/api/key

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: YoutubeSearchAPI

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: search
      RestApiId: !Ref ApiGateway

  ApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${YoutubeSearchFunction.Arn}/invocations

  LambdaApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref YoutubeSearchFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/GET/search

Outputs:
  ApiEndpoint:
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/search
